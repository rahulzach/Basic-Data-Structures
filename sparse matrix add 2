#include <stdio.h>
void addition(int ktemp[3][100],int ltemp[3][100],int k,int l);
 int main(){
     int a[20][20],ktemp[3][100],n,m,p,q,count=0,i,j,k=0,b[20][20],l=0,ltemp[3][100];
     printf("enter the row");
     scanf("%d",&n);
     printf("enter columns");
     scanf("%d",&m);
     for(i=0;i<n;i++){
         for(j=0;j<m;j++){
             printf("enter %d%d",i,j);
             scanf("%d",&a[i][j]);
             if(a[i][j]!=0){
                 ktemp[0][k]=i;
                 ktemp[1][k]=j;
                 ktemp[2][k]=a[i][j];
                 k++;
             }
         }
     }
     printf("sparse matrix is ");
     for(i=0;i<3;i++){
         for(j=0;j<k;j++){
             printf("%d",ktemp[i][j]);
         }
         printf("\n");
     }
     printf("enter the row");
     scanf("%d",&p);
     printf("enter columns");
     scanf("%d",&q);
     if(p!=m||q!=n){
         printf("addition can be performed on same order");
     }
     else{
        
     
     for(i=0;i<n;i++){
         for(j=0;j<m;j++){
             printf("enter %d%d",i,j);
             scanf("%d",&b[i][j]);
             if(b[i][j]!=0){
                 ltemp[0][l]=i;
                 ltemp[1][l]=j;
                 ltemp[2][l]=b[i][j];
                 l++;
             }
         }
     }
     printf("sparse matrix is ");
     for(i=0;i<3;i++){
         for(j=0;j<l;j++){
             printf("%d",ltemp[i][j]);
         }
         printf("\n");
     }
     addition(ktemp,ltemp,k,l);
     }
 }
 void addition(int ktemp[3][100],int ltemp[3][100],int k,int l){
     int i=0,j=0,sparse[3][100],x=0;
     while(i<k&&j<l){
         if((ktemp[0][i]==ltemp[0][j])&&(ltemp[1][j]==ktemp[1][i])){
             printf("entered this ");
             sparse[0][x]=ktemp[0][i];
             sparse[1][x]=ktemp[1][i];
             sparse[2][x]=ltemp[2][j]+ktemp[2][i];
             x++;
             i++;
             j++;
         }
         else{
             if(ktemp[0][i]<ltemp[0][j]){
                  sparse[0][x]=ktemp[0][i];
             sparse[1][x]=ktemp[1][i];
             sparse[2][x]=ktemp[2][i];
             x++;
             i++;
             
             }
             else{
                  if((ktemp[0][i]==ltemp[0][j])&&(ktemp[1][i]<ltemp[1][j])){
                       sparse[0][x]=ktemp[0][i];
             sparse[1][x]=ktemp[1][i];
             sparse[2][x]=ktemp[2][i];
             x++;
             i++;
             }
             else{
                  sparse[0][x]=ktemp[0][j];
             sparse[1][x]=ktemp[1][j];
             sparse[2][x]=ktemp[2][j];
             x++;
             j++;
             }
             }
         }
     }
     while(i<k){
          sparse[0][x]=ktemp[0][i];
             sparse[1][x]=ktemp[1][i];
             sparse[2][x]=ktemp[2][i];
             x++;
             i++;
     }
     while(j<l){
          sparse[0][x]=ktemp[0][j];
             sparse[1][x]=ktemp[1][j];
             sparse[2][x]=ktemp[2][j];
             x++;
             j++;
     }
     printf("addition matrix is");
     for(i=0;i<3;i++){
         for(j=0;j<x;j++){
             printf("%d",sparse[i][j]);
         }
         printf("\n");
     }
     }
